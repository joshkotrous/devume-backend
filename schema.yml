openapi: 3.0.3
info:
  title: Devume API
  version: 1.0.0
  description: Devume
paths:
  /.:
    get:
      operationId: ._retrieve
      tags:
      - .
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: ._create
      tags:
      - .
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: ._update
      tags:
      - .
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: ._partial_update
      tags:
      - .
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/cities:
    get:
      operationId: api_cities_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
          description: ''
  /api/cities/{id}:
    get:
      operationId: api_cities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/cities/{id}/update:
    put:
      operationId: api_cities_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    patch:
      operationId: api_cities_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCity'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/cities/create:
    post:
      operationId: api_cities_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/countries:
    get:
      operationId: api_countries_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
          description: ''
  /api/countries/{id}:
    get:
      operationId: api_countries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/countries/{id}/update:
    put:
      operationId: api_countries_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: api_countries_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/countries/create:
    post:
      operationId: api_countries_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/degrees:
    get:
      operationId: api_degrees_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/education:
    get:
      operationId: api_education_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
          description: ''
  /api/education/{id}/update:
    put:
      operationId: api_education_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    patch:
      operationId: api_education_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/education/{profile_id}:
    get:
      operationId: api_education_list_2
      parameters:
      - in: path
        name: profile_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
          description: ''
  /api/education/create:
    post:
      operationId: api_education_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/health:
    get:
      operationId: api_health_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/health/:
    get:
      operationId: api_health_retrieve_2
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/keys/create:
    post:
      operationId: api_keys_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApiKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApiKey'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: ''
  /api/login:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create_2
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/profiles:
    get:
      operationId: api_profiles_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/:
    get:
      operationId: api_profiles_list_2
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/{uuid}:
    get:
      operationId: api_profiles_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/create:
    post:
      operationId: api_profiles_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/create/:
    post:
      operationId: api_profiles_create_create_2
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/update/{uuid}:
    put:
      operationId: api_profiles_update_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_profiles_update_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/skills:
    get:
      operationId: api_skills_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
          description: ''
  /api/skills/{id}:
    get:
      operationId: api_skills_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/skills/{id}/update:
    put:
      operationId: api_skills_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    patch:
      operationId: api_skills_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/skills/create:
    post:
      operationId: api_skills_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/states:
    get:
      operationId: api_states_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/State'
          description: ''
  /api/states/{id}:
    get:
      operationId: api_states_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api/states/{id}/update:
    put:
      operationId: api_states_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/State'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
    patch:
      operationId: api_states_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedState'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedState'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api/states/create:
    post:
      operationId: api_states_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/State'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api/users:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/update:
    put:
      operationId: api_users_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/create:
    post:
      operationId: api_users_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/create/:
    post:
      operationId: api_users_create_create_2
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/work_experience:
    get:
      operationId: api_work_experience_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkExperience'
          description: ''
  /api/work_experience/{id}/update:
    put:
      operationId: api_work_experience_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkExperience'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkExperience'
          description: ''
    patch:
      operationId: api_work_experience_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkExperience'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkExperience'
          description: ''
  /api/work_experience/{profile_id}:
    get:
      operationId: api_work_experience_list_2
      parameters:
      - in: path
        name: profile_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkExperience'
          description: ''
  /api/work_experience/create:
    post:
      operationId: api_work_experience_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkExperience'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkExperience'
          description: ''
components:
  schemas:
    ApiKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
      required:
      - created_at
      - id
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        state:
          type: integer
      required:
      - id
      - name
      - state
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 2
      required:
      - country_code
      - id
      - name
    DegreeEnum:
      enum:
      - Associates
      - Bachelors
      - Masters
      - Doctorate
      type: string
      description: |-
        * `Associates` - Associates
        * `Bachelors` - Bachelors
        * `Masters` - Masters
        * `Doctorate` - Doctorate
    Education:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        school_name:
          type: string
          nullable: true
          maxLength: 200
        degree:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DegreeEnum'
          - $ref: '#/components/schemas/NullEnum'
        field_of_study:
          type: string
          nullable: true
          maxLength: 200
      required:
      - id
    NullEnum:
      enum:
      - null
    PatchedCity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        state:
          type: integer
    PatchedCountry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        country_code:
          type: string
          maxLength: 2
    PatchedEducation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        school_name:
          type: string
          nullable: true
          maxLength: 200
        degree:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DegreeEnum'
          - $ref: '#/components/schemas/NullEnum'
        field_of_study:
          type: string
          nullable: true
          maxLength: 200
    PatchedProfile:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        birth_date:
          type: string
          format: date
          nullable: true
        bio:
          type: string
          nullable: true
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        skills:
          nullable: true
        city:
          type: integer
          nullable: true
        state:
          type: integer
          nullable: true
        country:
          type: integer
          nullable: true
    PatchedSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedState:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        state_code:
          type: string
          maxLength: 2
        country:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PatchedWorkExperience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 1000
        skills:
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
    Profile:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        birth_date:
          type: string
          format: date
          nullable: true
        bio:
          type: string
          nullable: true
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        skills:
          nullable: true
        city:
          type: integer
          nullable: true
        state:
          type: integer
          nullable: true
        country:
          type: integer
          nullable: true
      required:
      - created_at
      - modified_at
    Skill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    State:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        state_code:
          type: string
          maxLength: 2
        country:
          type: integer
      required:
      - country
      - id
      - name
      - state_code
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    WorkExperience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 1000
        skills:
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
      required:
      - id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: http
      scheme: bearer
